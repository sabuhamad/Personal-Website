{"ast":null,"code":"import _asyncToGenerator from \"/Users/sabuhamad/Desktop/Personal_Website/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sabuhamad/Desktop/Personal_Website/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/sabuhamad/Desktop/Personal_Website/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sabuhamad/Desktop/Personal_Website/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container) {\n  var options = new Options(engine, container);\n  for (var _len = arguments.length, sourceOptionsArr = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    sourceOptionsArr[_key - 2] = arguments[_key];\n  }\n  loadOptions.apply(void 0, [options].concat(sourceOptionsArr));\n  return options;\n}\nvar defaultPathGeneratorKey = \"default\",\n  defaultPathGenerator = {\n    generate: function generate(p) {\n      var v = p.velocity.copy();\n      v.angle += v.length * Math.PI / 180;\n      return v;\n    },\n    init: function init() {},\n    update: function update() {},\n    reset: function reset() {}\n  };\nexport var Container = /*#__PURE__*/function () {\n  function Container(engine, id, sourceOptions) {\n    var _this = this;\n    _classCallCheck(this, Container);\n    this.id = id;\n    this._engine = engine;\n    this.fpsLimit = 120;\n    this.smooth = false;\n    this._delay = 0;\n    this.duration = 0;\n    this.lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.frameManager = new FrameManager(this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this._intersectionObserver = new IntersectionObserver(function (entries) {\n        return _this._intersectionManager(entries);\n      });\n    }\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n  _createClass(Container, [{\n    key: \"addClickHandler\",\n    value: function addClickHandler(callback) {\n      var _this2 = this;\n      if (!guardCheck(this)) {\n        return;\n      }\n      var el = this.interactivity.element;\n      if (!el) {\n        return;\n      }\n      var clickOrTouchHandler = function clickOrTouchHandler(e, pos, radius) {\n        if (!guardCheck(_this2)) {\n          return;\n        }\n        var pxRatio = _this2.retina.pixelRatio,\n          posRetina = {\n            x: pos.x * pxRatio,\n            y: pos.y * pxRatio\n          },\n          particles = _this2.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n        callback(e, particles);\n      };\n      var clickHandler = function clickHandler(e) {\n        if (!guardCheck(_this2)) {\n          return;\n        }\n        var mouseEvent = e,\n          pos = {\n            x: mouseEvent.offsetX || mouseEvent.clientX,\n            y: mouseEvent.offsetY || mouseEvent.clientY\n          };\n        clickOrTouchHandler(e, pos, 1);\n      };\n      var touchStartHandler = function touchStartHandler() {\n        if (!guardCheck(_this2)) {\n          return;\n        }\n        touched = true;\n        touchMoved = false;\n      };\n      var touchMoveHandler = function touchMoveHandler() {\n        if (!guardCheck(_this2)) {\n          return;\n        }\n        touchMoved = true;\n      };\n      var touchEndHandler = function touchEndHandler(e) {\n        if (!guardCheck(_this2)) {\n          return;\n        }\n        if (touched && !touchMoved) {\n          var touchEvent = e;\n          var lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n          if (!lastTouch) {\n            lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n            if (!lastTouch) {\n              return;\n            }\n          }\n          var element = _this2.canvas.element,\n            canvasRect = element ? element.getBoundingClientRect() : undefined,\n            pos = {\n              x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n              y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)\n            };\n          clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n        }\n        touched = false;\n        touchMoved = false;\n      };\n      var touchCancelHandler = function touchCancelHandler() {\n        if (!guardCheck(_this2)) {\n          return;\n        }\n        touched = false;\n        touchMoved = false;\n      };\n      var touched = false,\n        touchMoved = false;\n      el.addEventListener(\"click\", clickHandler);\n      el.addEventListener(\"touchstart\", touchStartHandler);\n      el.addEventListener(\"touchmove\", touchMoveHandler);\n      el.addEventListener(\"touchend\", touchEndHandler);\n      el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n  }, {\n    key: \"addPath\",\n    value: function addPath(key, generator) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n        return false;\n      }\n      this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n      return true;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this3 = this;\n      if (!guardCheck(this)) {\n        return;\n      }\n      this.stop();\n      this.particles.destroy();\n      this.canvas.destroy();\n      var _iterator = _createForOfIteratorHelper(this.drawers),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            drawer = _step$value[1];\n          if (drawer.destroy) {\n            drawer.destroy(this);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var _iterator2 = _createForOfIteratorHelper(this.drawers.keys()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          this.drawers.delete(key);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this._engine.plugins.destroy(this);\n      this.destroyed = true;\n      var mainArr = this._engine.dom(),\n        idx = mainArr.findIndex(function (t) {\n          return t === _this3;\n        });\n      if (idx >= 0) {\n        mainArr.splice(idx, 1);\n      }\n      this._engine.dispatchEvent(\"containerDestroyed\", {\n        container: this\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(force) {\n      var _this4 = this;\n      if (!guardCheck(this)) {\n        return;\n      }\n      var refreshTime = force;\n      this._drawAnimationFrame = animate()( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(timestamp) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (refreshTime) {\n                  _this4.lastFrameTime = undefined;\n                  refreshTime = false;\n                }\n                _context.next = 3;\n                return _this4.frameManager.nextFrame(timestamp);\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"exportConfiguration\",\n    value: function exportConfiguration() {\n      return JSON.stringify(this.actualOptions, function (key, value) {\n        if (key === \"_engine\" || key === \"_container\") {\n          return;\n        }\n        return value;\n      }, 2);\n    }\n  }, {\n    key: \"exportImage\",\n    value: function exportImage(callback, type, quality) {\n      var element = this.canvas.element;\n      if (element) {\n        element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n      }\n    }\n  }, {\n    key: \"exportImg\",\n    value: function exportImg(callback) {\n      this.exportImage(callback);\n    }\n  }, {\n    key: \"getAnimationStatus\",\n    value: function getAnimationStatus() {\n      return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      if (!guardCheck(this)) {\n        return;\n      }\n      this.particles.handleClickMode(mode);\n      var _iterator3 = _createForOfIteratorHelper(this.plugins),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n            plugin = _step3$value[1];\n          if (plugin.handleClickMode) {\n            plugin.handleClickMode(mode);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var shapes, _iterator4, _step4, type, drawer, availablePlugins, _iterator5, _step5, _step5$value, id, plugin, _iterator6, _step6, _step6$value, _drawer, _iterator7, _step7, _step7$value, _plugin, _iterator8, _step8, _step8$value, _plugin2;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (guardCheck(this)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              shapes = this._engine.plugins.getSupportedShapes();\n              _iterator4 = _createForOfIteratorHelper(shapes);\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  type = _step4.value;\n                  drawer = this._engine.plugins.getShapeDrawer(type);\n                  if (drawer) {\n                    this.drawers.set(type, drawer);\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n              this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n              this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n              availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n              _iterator5 = _createForOfIteratorHelper(availablePlugins);\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  _step5$value = _slicedToArray(_step5.value, 2), id = _step5$value[0], plugin = _step5$value[1];\n                  this.plugins.set(id, plugin);\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n              this.retina.init();\n              _context2.next = 13;\n              return this.canvas.init();\n            case 13:\n              this.updateActualOptions();\n              this.canvas.initBackground();\n              this.canvas.resize();\n              this.zLayers = this.actualOptions.zLayers;\n              this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n              this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n              this.lifeTime = 0;\n              this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n              this.smooth = this.actualOptions.smooth;\n              _iterator6 = _createForOfIteratorHelper(this.drawers);\n              _context2.prev = 23;\n              _iterator6.s();\n            case 25:\n              if ((_step6 = _iterator6.n()).done) {\n                _context2.next = 32;\n                break;\n              }\n              _step6$value = _slicedToArray(_step6.value, 2), _drawer = _step6$value[1];\n              if (!_drawer.init) {\n                _context2.next = 30;\n                break;\n              }\n              _context2.next = 30;\n              return _drawer.init(this);\n            case 30:\n              _context2.next = 25;\n              break;\n            case 32:\n              _context2.next = 37;\n              break;\n            case 34:\n              _context2.prev = 34;\n              _context2.t0 = _context2[\"catch\"](23);\n              _iterator6.e(_context2.t0);\n            case 37:\n              _context2.prev = 37;\n              _iterator6.f();\n              return _context2.finish(37);\n            case 40:\n              _iterator7 = _createForOfIteratorHelper(this.plugins);\n              _context2.prev = 41;\n              _iterator7.s();\n            case 43:\n              if ((_step7 = _iterator7.n()).done) {\n                _context2.next = 50;\n                break;\n              }\n              _step7$value = _slicedToArray(_step7.value, 2), _plugin = _step7$value[1];\n              if (!_plugin.init) {\n                _context2.next = 48;\n                break;\n              }\n              _context2.next = 48;\n              return _plugin.init();\n            case 48:\n              _context2.next = 43;\n              break;\n            case 50:\n              _context2.next = 55;\n              break;\n            case 52:\n              _context2.prev = 52;\n              _context2.t1 = _context2[\"catch\"](41);\n              _iterator7.e(_context2.t1);\n            case 55:\n              _context2.prev = 55;\n              _iterator7.f();\n              return _context2.finish(55);\n            case 58:\n              this._engine.dispatchEvent(\"containerInit\", {\n                container: this\n              });\n              this.particles.init();\n              this.particles.setDensity();\n              _iterator8 = _createForOfIteratorHelper(this.plugins);\n              try {\n                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                  _step8$value = _slicedToArray(_step8.value, 2), _plugin2 = _step8$value[1];\n                  if (_plugin2.particlesSetup) {\n                    _plugin2.particlesSetup();\n                  }\n                }\n              } catch (err) {\n                _iterator8.e(err);\n              } finally {\n                _iterator8.f();\n              }\n              this._engine.dispatchEvent(\"particlesSetup\", {\n                container: this\n              });\n            case 64:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[23, 34, 37, 40], [41, 52, 55, 58]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"loadTheme\",\n    value: function () {\n      var _loadTheme = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(name) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (guardCheck(this)) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 2:\n              this._currentTheme = name;\n              _context3.next = 5;\n              return this.refresh();\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function loadTheme(_x2) {\n        return _loadTheme.apply(this, arguments);\n      }\n      return loadTheme;\n    }()\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (!guardCheck(this)) {\n        return;\n      }\n      if (this._drawAnimationFrame !== undefined) {\n        cancelAnimation()(this._drawAnimationFrame);\n        delete this._drawAnimationFrame;\n      }\n      if (this._paused) {\n        return;\n      }\n      var _iterator9 = _createForOfIteratorHelper(this.plugins),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var _step9$value = _slicedToArray(_step9.value, 2),\n            plugin = _step9$value[1];\n          if (plugin.pause) {\n            plugin.pause();\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      if (!this.pageHidden) {\n        this._paused = true;\n      }\n      this._engine.dispatchEvent(\"containerPaused\", {\n        container: this\n      });\n    }\n  }, {\n    key: \"play\",\n    value: function play(force) {\n      if (!guardCheck(this)) {\n        return;\n      }\n      var needsUpdate = this._paused || force;\n      if (this._firstStart && !this.actualOptions.autoPlay) {\n        this._firstStart = false;\n        return;\n      }\n      if (this._paused) {\n        this._paused = false;\n      }\n      if (needsUpdate) {\n        var _iterator10 = _createForOfIteratorHelper(this.plugins),\n          _step10;\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var _step10$value = _slicedToArray(_step10.value, 2),\n              plugin = _step10$value[1];\n            if (plugin.play) {\n              plugin.play();\n            }\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      }\n      this._engine.dispatchEvent(\"containerPlay\", {\n        container: this\n      });\n      this.draw(needsUpdate || false);\n    }\n  }, {\n    key: \"refresh\",\n    value: function () {\n      var _refresh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (guardCheck(this)) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              this.stop();\n              return _context4.abrupt(\"return\", this.start());\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function refresh() {\n        return _refresh.apply(this, arguments);\n      }\n      return refresh;\n    }()\n  }, {\n    key: \"reset\",\n    value: function () {\n      var _reset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (guardCheck(this)) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 2:\n              this._options = loadContainerOptions(this._engine, this);\n              return _context5.abrupt(\"return\", this.refresh());\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function reset() {\n        return _reset.apply(this, arguments);\n      }\n      return reset;\n    }()\n  }, {\n    key: \"setNoise\",\n    value: function setNoise(noiseOrGenerator, init, update) {\n      if (!guardCheck(this)) {\n        return;\n      }\n      this.setPath(noiseOrGenerator, init, update);\n    }\n  }, {\n    key: \"setPath\",\n    value: function setPath(pathOrGenerator, init, update) {\n      if (!pathOrGenerator || !guardCheck(this)) {\n        return;\n      }\n      var pathGenerator = Object.assign({}, defaultPathGenerator);\n      if (typeof pathOrGenerator === \"function\") {\n        pathGenerator.generate = pathOrGenerator;\n        if (init) {\n          pathGenerator.init = init;\n        }\n        if (update) {\n          pathGenerator.update = update;\n        }\n      } else {\n        var oldGenerator = pathGenerator;\n        pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n        pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n        pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n      }\n      this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var _this5 = this;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(!guardCheck(this) || this.started)) {\n                _context7.next = 2;\n                break;\n              }\n              return _context7.abrupt(\"return\");\n            case 2:\n              _context7.next = 4;\n              return this.init();\n            case 4:\n              this.started = true;\n              _context7.next = 7;\n              return new Promise(function (resolve) {\n                _this5._delayTimeout = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n                  var _iterator11, _step11, _step11$value, plugin;\n                  return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                    while (1) switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _this5._eventListeners.addListeners();\n                        if (_this5.interactivity.element instanceof HTMLElement && _this5._intersectionObserver) {\n                          _this5._intersectionObserver.observe(_this5.interactivity.element);\n                        }\n                        _iterator11 = _createForOfIteratorHelper(_this5.plugins);\n                        _context6.prev = 3;\n                        _iterator11.s();\n                      case 5:\n                        if ((_step11 = _iterator11.n()).done) {\n                          _context6.next = 12;\n                          break;\n                        }\n                        _step11$value = _slicedToArray(_step11.value, 2), plugin = _step11$value[1];\n                        if (!plugin.start) {\n                          _context6.next = 10;\n                          break;\n                        }\n                        _context6.next = 10;\n                        return plugin.start();\n                      case 10:\n                        _context6.next = 5;\n                        break;\n                      case 12:\n                        _context6.next = 17;\n                        break;\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](3);\n                        _iterator11.e(_context6.t0);\n                      case 17:\n                        _context6.prev = 17;\n                        _iterator11.f();\n                        return _context6.finish(17);\n                      case 20:\n                        _this5._engine.dispatchEvent(\"containerStarted\", {\n                          container: _this5\n                        });\n                        _this5.play();\n                        resolve();\n                      case 23:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }, _callee6, null, [[3, 14, 17, 20]]);\n                })), _this5._delay);\n              });\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!guardCheck(this) || !this.started) {\n        return;\n      }\n      if (this._delayTimeout) {\n        clearTimeout(this._delayTimeout);\n        delete this._delayTimeout;\n      }\n      this._firstStart = true;\n      this.started = false;\n      this._eventListeners.removeListeners();\n      this.pause();\n      this.particles.clear();\n      this.canvas.stop();\n      if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n        this._intersectionObserver.unobserve(this.interactivity.element);\n      }\n      var _iterator12 = _createForOfIteratorHelper(this.plugins),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _step12$value = _slicedToArray(_step12.value, 2),\n            plugin = _step12$value[1];\n          if (plugin.stop) {\n            plugin.stop();\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      var _iterator13 = _createForOfIteratorHelper(this.plugins.keys()),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var key = _step13.value;\n          this.plugins.delete(key);\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      this._sourceOptions = this._options;\n      this._engine.dispatchEvent(\"containerStopped\", {\n        container: this\n      });\n    }\n  }, {\n    key: \"updateActualOptions\",\n    value: function updateActualOptions() {\n      this.actualOptions.responsive = [];\n      var newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n      this.actualOptions.setTheme(this._currentTheme);\n      if (this.responsiveMaxWidth === newMaxWidth) {\n        return false;\n      }\n      this.responsiveMaxWidth = newMaxWidth;\n      return true;\n    }\n  }, {\n    key: \"_intersectionManager\",\n    value: function _intersectionManager(entries) {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      var _iterator14 = _createForOfIteratorHelper(entries),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var entry = _step14.value;\n          if (entry.target !== this.interactivity.element) {\n            continue;\n          }\n          (entry.isIntersecting ? this.play : this.pause)();\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    }\n  }, {\n    key: \"sourceOptions\",\n    get: function get() {\n      return this._sourceOptions;\n    }\n  }]);\n  return Container;\n}();","map":null,"metadata":{},"sourceType":"module"}