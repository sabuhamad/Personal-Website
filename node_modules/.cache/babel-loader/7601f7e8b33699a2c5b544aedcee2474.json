{"ast":null,"code":"import _classCallCheck from \"/Users/sabuhamad/Documents/GitHub/Personal-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sabuhamad/Documents/GitHub/Personal-Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport var DestroyOutMode = /*#__PURE__*/function () {\n  function DestroyOutMode(container) {\n    _classCallCheck(this, DestroyOutMode);\n    this.container = container;\n    this.modes = [\"destroy\"];\n  }\n  _createClass(DestroyOutMode, [{\n    key: \"update\",\n    value: function update(particle, direction, delta, outMode) {\n      if (!this.modes.includes(outMode)) {\n        return;\n      }\n      var container = this.container;\n      switch (particle.outType) {\n        case \"normal\":\n        case \"outside\":\n          if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n            return;\n          }\n          break;\n        case \"inside\":\n          {\n            var _getDistances = getDistances(particle.position, particle.moveCenter),\n              dx = _getDistances.dx,\n              dy = _getDistances.dy;\n            var _particle$velocity = particle.velocity,\n              vx = _particle$velocity.x,\n              vy = _particle$velocity.y;\n            if (vx < 0 && dx > particle.moveCenter.radius || vy < 0 && dy > particle.moveCenter.radius || vx >= 0 && dx < -particle.moveCenter.radius || vy >= 0 && dy < -particle.moveCenter.radius) {\n              return;\n            }\n            break;\n          }\n      }\n      container.particles.remove(particle, undefined, true);\n    }\n  }]);\n  return DestroyOutMode;\n}();","map":null,"metadata":{},"sourceType":"module"}