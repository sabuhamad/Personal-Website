{"ast":null,"code":"import _classCallCheck from \"/Users/sabuhamad/Desktop/Personal_Website/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sabuhamad/Desktop/Personal_Website/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport var ParticlesOptions = /*#__PURE__*/function () {\n  function ParticlesOptions(engine, container) {\n    _classCallCheck(this, ParticlesOptions);\n    this._engine = engine;\n    this._container = container;\n    this.bounce = new ParticlesBounce();\n    this.collisions = new Collisions();\n    this.color = new AnimatableColor();\n    this.color.value = \"#fff\";\n    this.groups = {};\n    this.move = new Move();\n    this.number = new ParticlesNumber();\n    this.opacity = new Opacity();\n    this.reduceDuplicates = false;\n    this.shadow = new Shadow();\n    this.shape = new Shape();\n    this.size = new Size();\n    this.stroke = new Stroke();\n    this.zIndex = new ZIndex();\n  }\n  _createClass(ParticlesOptions, [{\n    key: \"load\",\n    value: function load(data) {\n      var _a, _b, _c, _d, _e, _f;\n      if (!data) {\n        return;\n      }\n      this.bounce.load(data.bounce);\n      this.color.load(AnimatableColor.create(this.color, data.color));\n      if (data.groups !== undefined) {\n        for (var group in data.groups) {\n          var item = data.groups[group];\n          if (item !== undefined) {\n            this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n          }\n        }\n      }\n      this.move.load(data.move);\n      this.number.load(data.number);\n      this.opacity.load(data.opacity);\n      if (data.reduceDuplicates !== undefined) {\n        this.reduceDuplicates = data.reduceDuplicates;\n      }\n      this.shape.load(data.shape);\n      this.size.load(data.size);\n      this.shadow.load(data.shadow);\n      this.zIndex.load(data.zIndex);\n      var collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n      if (collisions !== undefined) {\n        this.collisions.enable = collisions;\n      }\n      this.collisions.load(data.collisions);\n      if (data.interactivity !== undefined) {\n        this.interactivity = deepExtend({}, data.interactivity);\n      }\n      var strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n      if (strokeToLoad) {\n        this.stroke = executeOnSingleOrMultiple(strokeToLoad, function (t) {\n          var tmp = new Stroke();\n          tmp.load(t);\n          return tmp;\n        });\n      }\n      if (this._container) {\n        var updaters = this._engine.plugins.updaters.get(this._container);\n        if (updaters) {\n          var _iterator = _createForOfIteratorHelper(updaters),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var updater = _step.value;\n              if (updater.loadOptions) {\n                updater.loadOptions(this, data);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n        var interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n          var _iterator2 = _createForOfIteratorHelper(interactors),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var interactor = _step2.value;\n              if (interactor.loadParticlesOptions) {\n                interactor.loadParticlesOptions(this, data);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }\n    }\n  }]);\n  return ParticlesOptions;\n}();","map":null,"metadata":{},"sourceType":"module"}