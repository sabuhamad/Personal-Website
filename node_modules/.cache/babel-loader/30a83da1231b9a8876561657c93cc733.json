{"ast":null,"code":"import _classCallCheck from \"/Users/sabuhamad/Desktop/Personal_Website/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sabuhamad/Desktop/Personal_Website/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport var Move = /*#__PURE__*/function () {\n  function Move() {\n    _classCallCheck(this, Move);\n    this.angle = new MoveAngle();\n    this.attract = new MoveAttract();\n    this.center = new MoveCenter();\n    this.decay = 0;\n    this.distance = {};\n    this.direction = \"none\";\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity();\n    this.path = new MovePath();\n    this.outModes = new OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin();\n    this.straight = false;\n    this.trail = new MoveTrail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n  _createClass(Move, [{\n    key: \"load\",\n    value: function load(data) {\n      var _a, _b, _c;\n      if (!data) {\n        return;\n      }\n      this.angle.load(typeof data.angle === \"number\" ? {\n        value: data.angle\n      } : data.angle);\n      this.attract.load(data.attract);\n      this.center.load(data.center);\n      if (data.decay !== undefined) {\n        this.decay = setRangeValue(data.decay);\n      }\n      if (data.direction !== undefined) {\n        this.direction = data.direction;\n      }\n      if (data.distance !== undefined) {\n        this.distance = typeof data.distance === \"number\" ? {\n          horizontal: data.distance,\n          vertical: data.distance\n        } : Object.assign({}, data.distance);\n      }\n      if (data.drift !== undefined) {\n        this.drift = setRangeValue(data.drift);\n      }\n      if (data.enable !== undefined) {\n        this.enable = data.enable;\n      }\n      this.gravity.load(data.gravity);\n      var outModes = (_b = (_a = data.outModes) !== null && _a !== void 0 ? _a : data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n      if (outModes !== undefined) {\n        if (typeof outModes === \"object\") {\n          this.outModes.load(outModes);\n        } else {\n          this.outModes.load({\n            default: outModes\n          });\n        }\n      }\n      this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n      if (data.random !== undefined) {\n        this.random = data.random;\n      }\n      if (data.size !== undefined) {\n        this.size = data.size;\n      }\n      if (data.speed !== undefined) {\n        this.speed = setRangeValue(data.speed);\n      }\n      this.spin.load(data.spin);\n      if (data.straight !== undefined) {\n        this.straight = data.straight;\n      }\n      this.trail.load(data.trail);\n      if (data.vibrate !== undefined) {\n        this.vibrate = data.vibrate;\n      }\n      if (data.warp !== undefined) {\n        this.warp = data.warp;\n      }\n    }\n  }, {\n    key: \"bounce\",\n    get: function get() {\n      return this.collisions;\n    },\n    set: function set(value) {\n      this.collisions = value;\n    }\n  }, {\n    key: \"collisions\",\n    get: function get() {\n      return false;\n    },\n    set: function set(_) {}\n  }, {\n    key: \"noise\",\n    get: function get() {\n      return this.path;\n    },\n    set: function set(value) {\n      this.path = value;\n    }\n  }, {\n    key: \"outMode\",\n    get: function get() {\n      return this.outModes.default;\n    },\n    set: function set(value) {\n      this.outModes.default = value;\n    }\n  }, {\n    key: \"out_mode\",\n    get: function get() {\n      return this.outMode;\n    },\n    set: function set(value) {\n      this.outMode = value;\n    }\n  }]);\n  return Move;\n}();","map":null,"metadata":{},"sourceType":"module"}